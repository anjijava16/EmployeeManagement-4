//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeemanagementApp.EmpServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmpServiceRef.IEmployeeMgmtService")]
    public interface IEmployeeMgmtService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/CreateDepartment", ReplyAction="http://tempuri.org/IEmployeeMgmtService/CreateDepartmentResponse")]
        int CreateDepartment(object dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/CreateDepartment", ReplyAction="http://tempuri.org/IEmployeeMgmtService/CreateDepartmentResponse")]
        System.Threading.Tasks.Task<int> CreateDepartmentAsync(object dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeMgmtService/CreateEmployeeResponse")]
        int CreateEmployee(object emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeMgmtService/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<int> CreateEmployeeAsync(object emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/DeleteDepartment", ReplyAction="http://tempuri.org/IEmployeeMgmtService/DeleteDepartmentResponse")]
        void DeleteDepartment(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/DeleteDepartment", ReplyAction="http://tempuri.org/IEmployeeMgmtService/DeleteDepartmentResponse")]
        System.Threading.Tasks.Task DeleteDepartmentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeMgmtService/DeleteEmployeeResponse")]
        void DeleteEmployee(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeMgmtService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task DeleteEmployeeAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/ReadDepartment", ReplyAction="http://tempuri.org/IEmployeeMgmtService/ReadDepartmentResponse")]
        object ReadDepartment(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/ReadDepartment", ReplyAction="http://tempuri.org/IEmployeeMgmtService/ReadDepartmentResponse")]
        System.Threading.Tasks.Task<object> ReadDepartmentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/ReadEmployee", ReplyAction="http://tempuri.org/IEmployeeMgmtService/ReadEmployeeResponse")]
        object ReadEmployee(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/ReadEmployee", ReplyAction="http://tempuri.org/IEmployeeMgmtService/ReadEmployeeResponse")]
        System.Threading.Tasks.Task<object> ReadEmployeeAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/UpdateDepartment", ReplyAction="http://tempuri.org/IEmployeeMgmtService/UpdateDepartmentResponse")]
        void UpdateDepartment(object dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/UpdateDepartment", ReplyAction="http://tempuri.org/IEmployeeMgmtService/UpdateDepartmentResponse")]
        System.Threading.Tasks.Task UpdateDepartmentAsync(object dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeMgmtService/UpdateEmployeeResponse")]
        void UpdateEmployee(object emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeMgmtService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeMgmtService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task UpdateEmployeeAsync(object emp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeMgmtServiceChannel : EmployeemanagementApp.EmpServiceRef.IEmployeeMgmtService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeMgmtServiceClient : System.ServiceModel.ClientBase<EmployeemanagementApp.EmpServiceRef.IEmployeeMgmtService>, EmployeemanagementApp.EmpServiceRef.IEmployeeMgmtService {
        
        public EmployeeMgmtServiceClient() {
        }
        
        public EmployeeMgmtServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeMgmtServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeMgmtServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeMgmtServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateDepartment(object dept) {
            return base.Channel.CreateDepartment(dept);
        }
        
        public System.Threading.Tasks.Task<int> CreateDepartmentAsync(object dept) {
            return base.Channel.CreateDepartmentAsync(dept);
        }
        
        public int CreateEmployee(object emp) {
            return base.Channel.CreateEmployee(emp);
        }
        
        public System.Threading.Tasks.Task<int> CreateEmployeeAsync(object emp) {
            return base.Channel.CreateEmployeeAsync(emp);
        }
        
        public void DeleteDepartment(string id) {
            base.Channel.DeleteDepartment(id);
        }
        
        public System.Threading.Tasks.Task DeleteDepartmentAsync(string id) {
            return base.Channel.DeleteDepartmentAsync(id);
        }
        
        public void DeleteEmployee(string id) {
            base.Channel.DeleteEmployee(id);
        }
        
        public System.Threading.Tasks.Task DeleteEmployeeAsync(string id) {
            return base.Channel.DeleteEmployeeAsync(id);
        }
        
        public object ReadDepartment(string id) {
            return base.Channel.ReadDepartment(id);
        }
        
        public System.Threading.Tasks.Task<object> ReadDepartmentAsync(string id) {
            return base.Channel.ReadDepartmentAsync(id);
        }
        
        public object ReadEmployee(string id) {
            return base.Channel.ReadEmployee(id);
        }
        
        public System.Threading.Tasks.Task<object> ReadEmployeeAsync(string id) {
            return base.Channel.ReadEmployeeAsync(id);
        }
        
        public void UpdateDepartment(object dept) {
            base.Channel.UpdateDepartment(dept);
        }
        
        public System.Threading.Tasks.Task UpdateDepartmentAsync(object dept) {
            return base.Channel.UpdateDepartmentAsync(dept);
        }
        
        public void UpdateEmployee(object emp) {
            base.Channel.UpdateEmployee(emp);
        }
        
        public System.Threading.Tasks.Task UpdateEmployeeAsync(object emp) {
            return base.Channel.UpdateEmployeeAsync(emp);
        }
    }
}
